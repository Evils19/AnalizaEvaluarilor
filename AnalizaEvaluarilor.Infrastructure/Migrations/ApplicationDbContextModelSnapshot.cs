// <auto-generated />
using System;
using AnalizaEvaluarilor.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnalizaEvaluarilor.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnalizaEvaluarilor.Domain.Entity.User.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3c38590-08af-446c-a4e1-1bd22fed4443"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("611fe286-38ae-4a69-9aa4-a89cc42d7baa"),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("AnalizaEvaluarilor.Domain.Entity.User.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AnalizaEvaluarilor.Domain.Entity.User.UserRole", b =>
                {
                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdRole")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdUser", "IdRole");

                    b.HasIndex("IdRole");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("AnalizaEvaluarilor.Domain.Entity.User.UserRole", b =>
                {
                    b.HasOne("AnalizaEvaluarilor.Domain.Entity.User.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnalizaEvaluarilor.Domain.Entity.User.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AnalizaEvaluarilor.Domain.Entity.User.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("AnalizaEvaluarilor.Domain.Entity.User.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
